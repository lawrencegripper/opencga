{
    $schema: 'http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#',
    contentVersion: '1.0.0.0',
    parameters: {
        location: {
            type: 'string',
            defaultValue: '[resourceGroup().location]',
            metadata: {
                description: 'Location for all resources.',
            },
        },
        vmSize: {
            type: 'string',
            metadata: {
                description: 'Size of vm (e.g. Standard_D1_v2)',
            },
            defaultValue: 'Standard_D1_v2',
        },
        dnsLabelPrefix: {
            type: 'string',
            defaultValue: 'cgamongo',
            metadata: {
                description: 'Unique DNS Name for the Public IP used to access the Virtual Machine.',
            },
        },
        certificateEmail: {
            type: 'string',
            metadata: {
                description: 'Email address used for mongoDB letsencrypt certificates',
            },
        },
        clusterSize: {
            type: 'int',
            defaultValue: 3,
            allowedValues: [
                1,
                3,
                5,
                7,
                9,
                11,
            ],
            metadata: {
                description: 'Amount of VMs to deploy for the mongodb replica set',
            },
        },
        adminUsername: {
            type: 'string',
            metadata: {
                description: 'The username for all mongoDB VMs (also used for connecting oer SSH)',
            },
        },
        adminSSHKeyData: {
            type: 'string',
            metadata: {
                description: 'The mongoDB VM public SSH key',
            },
        },
        mongoDBUsername: {
            type: 'string',
            defaultValue: 'opencga',
            metadata: {
                description: 'The username for connecting to mongoDB',
            },
        },
        mongoDBPassword: {
            type: 'securestring',
            metadata: {
                description: 'The password for connecting to mongoDB',
            },
        },
        subnetId: {
            type: 'string',
            metadata: {
                description: 'Subnet ID',
            },
        },
    },
    variables: {
        vmName: 'mongo-vm',
        nicName: 'mongo-nic',
        publicIPAddressName: 'mongo-publicip',
        publicIPAddressType: 'Static',
        dnsPrefix: "[concat(parameters('dnsLabelPrefix'), uniquestring(resourceGroup().id))]",
        sshKeyPath: "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
        copy: [
            {
                name: 'dnsNames',
                count: "[parameters('clusterSize')]",
                input: {
                    fqdn: "[concat(variables('dnsPrefix'),copyIndex('dnsNames'),'.',parameters('location'),'.cloudapp.azure.com')]",
                },
            },
        ],
    },
    resources: [
        {
            apiVersion: '2017-10-01',
            type: 'Microsoft.Network/networkInterfaces',
            name: "[concat(variables('nicName'), copyIndex())]",
            location: "[parameters('location')]",
            copy: {
                name: 'mongo-ip',
                count: "[parameters('clusterSize')]",
            },
            dependsOn: [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'), copyIndex())]",
            ],
            properties: {
                ipConfigurations: [
                    {
                        name: 'ipconfig1',
                        properties: {
                            privateIPAllocationMethod: 'Dynamic',
                            publicIPAddress: {
                                id: "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), copyIndex()))]",
                            },
                            subnet: {
                                id: "[parameters('subnetId')]",
                            },
                        },
                    },
                ],
            },
        },
        {
            apiVersion: '2017-10-01',
            type: 'Microsoft.Network/publicIPAddresses',
            name: "[concat(variables('publicIPAddressName'), copyIndex())]",
            location: "[parameters('location')]",
            copy: {
                name: 'mongo-ip',
                count: "[parameters('clusterSize')]",
            },
            properties: {
                publicIPAllocationMethod: "[variables('publicIPAddressType')]",
                dnsSettings: {
                    domainNameLabel: "[concat(variables('dnsPrefix'), copyIndex())]",
                },
            },
        },
        {
            name: "[concat(variables('vmName'), copyIndex())]",
            type: 'Microsoft.Compute/virtualMachines',
            apiVersion: '2018-06-01',
            location: "[parameters('location')]",
            dependsOn: [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyIndex())]",
            ],
            copy: {
                name: 'mongo-rs',
                count: "[parameters('clusterSize')]",
            },
            properties: {
                hardwareProfile: {
                    vmSize: "[parameters('vmSize')]",
                },
                storageProfile: {
                    osDisk: {
                        osType: 'Linux',
                        createOption: 'FromImage',
                        managedDisk: {
                            storageAccountType: 'Standard_LRS',
                        },
                    },
                    imageReference: {
                        publisher: 'Canonical',
                        offer: 'UbuntuServer',
                        sku: '16.04-LTS',
                        version: 'latest',
                    },
                },
                networkProfile: {
                    networkInterfaces: [
                        {
                            id: "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyIndex()))]",
                        },
                    ],
                },
                osProfile: {
                    computerName: "[concat(variables('vmName'), copyIndex())]",
                    customData: "[local-textFile('cloudinit.yaml')]",
                    linuxConfiguration: {
                        disablePasswordAuthentication: true,
                        ssh: {
                            publicKeys: [
                                {
                                    path: "[variables('sshKeyPath')]",
                                    keyData: "[parameters('adminSSHKeyData')]",
                                },
                            ],
                        },
                    },
                    adminUsername: "[parameters('adminUsername')]",
                    allowExtensionOperations: true,
                },
            },
            tags: {},
        },
        {
            type: 'Microsoft.Compute/virtualMachines/extensions',
            name: "[concat(variables('vmName'), copyIndex(), '/configureagent')]",
            apiVersion: '2017-12-01',
            location: "[parameters('location')]",
            dependsOn: [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyIndex())]",
            ],
            copy: {
                name: 'mongo-rs-ca',
                count: "[parameters('clusterSize')]",
            },
            properties: {
                publisher: 'Microsoft.Azure.Extensions',
                type: 'CustomScript',
                typeHandlerVersion: '2.0',
                autoUpgradeMinorVersion: true,
                settings: {
                    timestamp: 4,
                },
                protectedSettings: {
                    commandToExecute: "\
[concat(' VM_INDEX=', copyIndex(), ' CLUSTER_SIZE=', parameters('clusterSize'), \
' CERT_EMAIL=', parameters('certificateEmail'),' MONGODB_USERNAME=', parameters('mongoDBUsername'),' \
MONGODB_PASSWORD=', parameters('mongoDBPassword'),\
' APP_DNS_NAME=', reference(resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressName'),copyIndex())),'2017-10-01').dnsSettings.fqdn, \
' /bin/bash /opt/installmongodb.sh')]",
                },
            },
        },
    ],
    outputs: {
        mongoDBUser: {
            value: "[parameters('mongoDBUsername')]",
            type: 'string',
        },
        mongoDBPassword: {
            value: "[parameters('mongoDBPassword')]",
            type: 'string',
        },
        mongoClusterSize: {
            value: "[parameters('clusterSize')]",
            type: 'int',
        },
        dnsNames: {
            value: "[variables('dnsNames')]",
            type: 'array',
        },
    },
}